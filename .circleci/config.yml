version: 2

jobs:
  build:
    docker:
      - image: scality/scalitysproxydswift
    working_directory: ~/ScalitySproxydSwift
    steps:
      - checkout
      - attach_workspace:
          at: ~/ScalitySproxydSwift

      # Fetch the complete repository. Required to get the tags and
      # properly install the package with the correct version number.
      - run:
         name: Fetch the complete repository
         command: |
           git fetch --unshallow || true
           git fetch --tags

      - run:
         name: Create the tox venv
         command: tox --notest

      - persist_to_workspace:
         root: /root
         paths: ScalitySproxydSwift

  unit-tests:
    docker:
      - image: scality/scalitysproxydswift
    working_directory: ~/ScalitySproxydSwift
    steps:
      - attach_workspace:
         at: /root

      - run:
         name: Prepare coverage analysis
         command: coverage erase

      - run:
         name: Run the tests with tox
         command: tox -v -- --with-xunit

      - run:
         name: Generate coverage analysis report
         command: coverage html

      - run:
         name: Create and populate unit-tests-results directory
         command: |
           mkdir unit-tests-results
           mv nosetests-*.xml unit-tests-results/
           mv htmlcov unit-tests-results/

      - store_test_results:
          path: unit-tests-results

      - store_artifacts:
          path: unit-tests-results


  func-tests:
    machine:
      image: ubuntu-1604:202007-01
    working_directory: /tmp/ScalitySproxydSwift
    steps:
      - checkout

      - run:
          name: Install Swift from master branch, our connector and a local sproxyd
          command: sudo -E -H .circleci/install_devstack.sh

      - run:
          name: Run the tests with tox
          command: sudo -E -H .circleci/run_functests.sh

      - store_test_results:
          path: func-tests-results

      - store_artifacts:
          path: func-tests-results



workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - unit-tests:
          requires:
            - build
      - func-tests
  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - func-tests
